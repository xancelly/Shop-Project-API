//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shop_Project_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShopDBEntities : DbContext
    {
        public ShopDBEntities()
            : base("name=ShopDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<category> category { get; set; }
        public virtual DbSet<good> good { get; set; }
        public virtual DbSet<good_parameter> good_parameter { get; set; }
        public virtual DbSet<good_price> good_price { get; set; }
        public virtual DbSet<good_rate> good_rate { get; set; }
        public virtual DbSet<good_tax> good_tax { get; set; }
        public virtual DbSet<manufacturer> manufacturer { get; set; }
        public virtual DbSet<order> order { get; set; }
        public virtual DbSet<order_good> order_good { get; set; }
        public virtual DbSet<order_status> order_status { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<user_profile> user_profile { get; set; }
        public virtual DbSet<get_category> get_categories { get; set; }
        public virtual DbSet<get_goods> get_goods { get; set; }
        public virtual DbSet<get_manufacturer> get_manufacturers { get; set; }
    
        public virtual int add_good(Nullable<int> article_number, string photo, string name, string description, Nullable<int> code_category, Nullable<int> id_manufacturer, Nullable<decimal> price, Nullable<decimal> tax)
        {
            var article_numberParameter = article_number.HasValue ?
                new ObjectParameter("article_number", article_number) :
                new ObjectParameter("article_number", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var code_categoryParameter = code_category.HasValue ?
                new ObjectParameter("code_category", code_category) :
                new ObjectParameter("code_category", typeof(int));
    
            var id_manufacturerParameter = id_manufacturer.HasValue ?
                new ObjectParameter("id_manufacturer", id_manufacturer) :
                new ObjectParameter("id_manufacturer", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("tax", tax) :
                new ObjectParameter("tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_good", article_numberParameter, photoParameter, nameParameter, descriptionParameter, code_categoryParameter, id_manufacturerParameter, priceParameter, taxParameter);
        }
    
        public virtual int add_order(Nullable<int> id_user)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_order", id_userParameter);
        }
    
        public virtual int delete_good(Nullable<int> article_number)
        {
            var article_numberParameter = article_number.HasValue ?
                new ObjectParameter("article_number", article_number) :
                new ObjectParameter("article_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_good", article_numberParameter);
        }
    
        public virtual int delete_order(Nullable<int> code_order)
        {
            var code_orderParameter = code_order.HasValue ?
                new ObjectParameter("code_order", code_order) :
                new ObjectParameter("code_order", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_order", code_orderParameter);
        }
    
        public virtual ObjectResult<get_good_Result> get_good(Nullable<int> article_number)
        {
            var article_numberParameter = article_number.HasValue ?
                new ObjectParameter("article_number", article_number) :
                new ObjectParameter("article_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_good_Result>("get_good", article_numberParameter);
        }
    
        public virtual ObjectResult<get_good_parameter_Result> get_good_parameter(Nullable<int> article_code)
        {
            var article_codeParameter = article_code.HasValue ?
                new ObjectParameter("article_code", article_code) :
                new ObjectParameter("article_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_good_parameter_Result>("get_good_parameter", article_codeParameter);
        }
    
        public virtual ObjectResult<get_order_Result> get_order(Nullable<int> code_order)
        {
            var code_orderParameter = code_order.HasValue ?
                new ObjectParameter("code_order", code_order) :
                new ObjectParameter("code_order", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_order_Result>("get_order", code_orderParameter);
        }
    
        public virtual ObjectResult<get_user_orders_Result> get_user_orders(Nullable<int> id_user)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_user_orders_Result>("get_user_orders", id_userParameter);
        }
    
        public virtual int SignIn(string phone_number, string password, ObjectParameter id_user, ObjectParameter is_admin)
        {
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SignIn", phone_numberParameter, passwordParameter, id_user, is_admin);
        }
    
        public virtual int SignUp(string last_name, string first_name, string middle_name, string phone_number, string password)
        {
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SignUp", last_nameParameter, first_nameParameter, middle_nameParameter, phone_numberParameter, passwordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int update_good(Nullable<int> article_number, string photo, string name, string description, Nullable<int> code_category, Nullable<int> id_manufacturer, Nullable<decimal> price, Nullable<decimal> tax)
        {
            var article_numberParameter = article_number.HasValue ?
                new ObjectParameter("article_number", article_number) :
                new ObjectParameter("article_number", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var code_categoryParameter = code_category.HasValue ?
                new ObjectParameter("code_category", code_category) :
                new ObjectParameter("code_category", typeof(int));
    
            var id_manufacturerParameter = id_manufacturer.HasValue ?
                new ObjectParameter("id_manufacturer", id_manufacturer) :
                new ObjectParameter("id_manufacturer", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("tax", tax) :
                new ObjectParameter("tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_good", article_numberParameter, photoParameter, nameParameter, descriptionParameter, code_categoryParameter, id_manufacturerParameter, priceParameter, taxParameter);
        }
    
        public virtual int update_order(Nullable<int> code_order, Nullable<int> id_status)
        {
            var code_orderParameter = code_order.HasValue ?
                new ObjectParameter("code_order", code_order) :
                new ObjectParameter("code_order", typeof(int));
    
            var id_statusParameter = id_status.HasValue ?
                new ObjectParameter("id_status", id_status) :
                new ObjectParameter("id_status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_order", code_orderParameter, id_statusParameter);
        }
    }
}
